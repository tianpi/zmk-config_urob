//
////
////////
////////////////
////////////////////////////////
////////////////////////////////////////////////////////////////

#include <behaviors.dtsi>
#include <behaviors/num_word.dtsi> // requires auto-layer module

////////////////////////////////

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

////////////////

/* activate bluetooth */
#define CONFIG_WIRELESS 1
#if CONFIG_WIRELESS
    #include <dt-bindings/zmk/bt.h>
#endif

////////////////////////////////

#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/greek.dtsi"
#include "zmk-helpers/unicode-chars/german.dtsi"
#include "zmk-helpers/key-labels/glove80.h"

////////////////////////////////////////////////////////////////

#define __LAYERS

#define BASE        0
#define SYM         1
#define NAV         2
#define FUN         3
#define FUNFUN      4
#define NUM         5
#define NAVNUM      6
#define SYS         7
#define FACTORY     8
#define MAGIC       9
#define TEMPLATE    10

////////////////////////////////

#include "mouse.dtsi"

////////////////////////////////////////////////////////////////
/* Global settings */

#define __GLOBALS

////////////////////////////////

#define QUICK_TAP_MS 175

&sk {  // sticky-key config
    release-after-ms = <900>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

#define MT_SETTINGS_DEFAULT \
    flavor = "tap-preferred"; \
    tapping-term-ms = <220>; \
    quick-tap-ms = <220>; \
    hold-trigger-key-positions = <0>;

&mt { MT_SETTINGS_DEFAULT };

////////////////////////////////

#define KEY_CUT     APPLY_MODS(MOD_LCTL, X)
#define KEY_COPY    APPLY_MODS(MOD_LCTL, C)
#define KEY_PASTE   APPLY_MODS(MOD_LCTL, V)

#define KEY_UNDO        APPLY_MODS(MOD_LCTL, Z)
#define KEY_UNDO_ALT    APPLY_MODS(MOD_LSFT, APPLY_MODS(MOD_LCTL, Y))
#define KEY_REDO        APPLY_MODS(MOD_LCTL, Y)

#define XXX &none
#define ___ &trans

////////////////////////////////////////////////////////////////

#define __GLOVE80

////////////////////////////////
// https://github.com/moergo-sc/glove80-zmk-config/blob/main/config/glove80.keymap

#define RGB_STATUS_CMD 15
#define RGB_STATUS RGB_STATUS_CMD 0

/ {
    behaviors {
        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };
};

////////////////////////////////////////////////////////////////

#define __MOD_MORPHS

////////////////////////////////

// tap: backspace | lshft + tap: delete | rshft + tap: shift-delete
ZMK_MOD_MORPH(mm_bspc_del,
    bindings = <&kp BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    keep-mods = <MOD_RSFT>;
)

////////////////////////////////

#define ZMK_MOD_MORPH_SIMPLE(NAME, MOD, BINDING1, BINDING2) \
    ZMK_MOD_MORPH(NAME, \
        mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
        bindings = <BINDING1>, <BINDING2>; \
    )

ZMK_MOD_MORPH_SIMPLE(mm_comma_semicolon, SFT, &kp COMMA, &kp SEMICOLON)
ZMK_MOD_MORPH_SIMPLE(mm_comma_singlequote, SFT, &kp COMMA, &kp SINGLE_QUOTE)

ZMK_MOD_MORPH_SIMPLE(mm_dot_colon, SFT, &kp DOT, &kp COLON)
ZMK_MOD_MORPH_SIMPLE(mm_dot_doublequotes, SFT, &kp DOT, &kp DOUBLE_QUOTES)

ZMK_MOD_MORPH_SIMPLE(mm_parenthesis, SFT, &kp LEFT_PARENTHESIS, &kp RIGHT_PARENTHESIS)
ZMK_MOD_MORPH_SIMPLE(mm_brackets, SFT, &kp LEFT_BRACKET, &kp RIGHT_BRACKET)
ZMK_MOD_MORPH_SIMPLE(mm_braces, SFT, &kp LEFT_BRACE, &kp RIGHT_BRACE)
ZMK_MOD_MORPH_SIMPLE(mm_equal_equal, SFT, &kp EQUAL, &kp EQUAL)
ZMK_MOD_MORPH_SIMPLE(mm_add_sub, SFT, &kp PLUS, &kp MINUS)
ZMK_MOD_MORPH_SIMPLE(mm_add_sub_kp, SFT, &kp KP_PLUS, &kp KP_MINUS)
ZMK_MOD_MORPH_SIMPLE(mm_mul_div, SFT, &kp ASTERISK, &kp SLASH)
ZMK_MOD_MORPH_SIMPLE(mm_mul_div_kp, SFT, &kp KP_ASTERISK, &kp KP_SLASH)
ZMK_MOD_MORPH_SIMPLE(mm_and_or, SFT, &kp AMPERSAND, &kp PIPE)
ZMK_MOD_MORPH_SIMPLE(mm_lt_gt, SFT, &kp LESS_THAN, &kp GREATER_THAN)
ZMK_MOD_MORPH_SIMPLE(mm_excl_qmark, SFT, &kp EXCLAMATION, &kp QMARK)
ZMK_MOD_MORPH_SIMPLE(mm_slash_backslash, SFT, &kp SLASH, &kp BACKSLASH)
ZMK_MOD_MORPH_SIMPLE(mm_underscore_minus, SFT, &kp UNDERSCORE, &kp MINUS)
ZMK_MOD_MORPH_SIMPLE(mm_grave_caret, SFT, &kp GRAVE, &kp CARET)
ZMK_MOD_MORPH_SIMPLE(mm_undo_undo, SFT, &kp KEY_UNDO, &kp KEY_UNDO_ALT)
ZMK_MOD_MORPH_SIMPLE(mm_semicolon_semicolon, SFT, &kp SEMICOLON, &kp SEMICOLON)
ZMK_MOD_MORPH_SIMPLE(mm_doublequotes_singlequote, SFT, &kp DOUBLE_QUOTES, &kp SINGLE_QUOTE)
ZMK_MOD_MORPH_SIMPLE(mm_pointer_reference, SFT, &kp ASTERISK, &kp AMPERSAND)

////////////////////////////////////////////////////////////////
/* Homerow mods */

#define __HOMEROW_MODS

////////////////////////////////
// HRM_KP_KP
// HRM_KP_MM
// HRM_MO_KP
// HRM_MO_MM
// HRM_MA_KP (currently unused?!)

#define ZMK_HOLD_TAP_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        bindings = <HOLD>, <TAP>; \
        tapping-term-ms = <280>; \
        flavor = "balanced"; \
        require-prior-idle-ms = <150>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )

////////////////

#define KEYS_L  \
        LT0 LT1 LT2 LT3 LT4 LT5 \
        LM0 LM1 LM2 LM3 LM4 LM5 \
        LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R \
        RT0 RT1 RT2 RT3 RT4 RT5 \
        RM0 RM1 RM2 RM3 RM4 RM5 \
        RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS \
        LH5 LH4 LH3 LH2 LH1 LH0 \
        RH0 RH1 RH2 RH3 RH4 RH5

////////////////

ZMK_HOLD_TAP_HRM(ht_lhrm_kp_kp, &kp, &kp, KEYS_R THUMBS)
ZMK_HOLD_TAP_HRM(ht_rhrm_kp_kp, &kp, &kp, KEYS_L THUMBS)

ZMK_HOLD_TAP_HRM(ht_lhrm_mo_kp, &mo, &kp, KEYS_R THUMBS)
ZMK_HOLD_TAP_HRM(ht_rhrm_mo_kp, &mo, &kp, KEYS_L THUMBS)

////////////////

#define LHRM_KP_KP(key_on_hold, key_on_tap) ht_lhrm_kp_kp key_on_hold key_on_tap
#define RHRM_KP_KP(key_on_hold, key_on_tap) ht_rhrm_kp_kp key_on_hold key_on_tap

#define LHRM_MO_KP(layer_on_hold, key_on_tab) ht_lhrm_mo_kp layer_on_hold key_on_tab
#define RHRM_MO_KP(layer_on_hold, key_on_tab) ht_rhrm_mo_kp layer_on_hold key_on_tab

////////////////

#define ZMK_HOLD_TAP_LHRM_KP_MM(mm_on_tap) \
    ZMK_HOLD_TAP_HRM(ht_lhrm_kp_mm_ ## mm_on_tap, &kp, &mm_on_tap, KEYS_R THUMBS)
#define LHRM_KP_MM(key_on_hold, mm_on_tap) \
    ht_lhrm_kp_mm_ ## mm_on_tap key_on_hold 0

#define ZMK_HOLD_TAP_RHRM_KP_MM(mm_on_tap) \
    ZMK_HOLD_TAP_HRM(ht_rhrm_kp_mm_ ## mm_on_tap, &kp, &mm_on_tap, KEYS_L THUMBS)
#define RHRM_KP_MM(key_on_hold, mm_on_tap) \
    ht_rhrm_kp_mm_ ## mm_on_tap key_on_hold 0

////////////////

#define ZMK_HOLD_TAP_LHRM_MO_MM(mm_on_tap) \
    ZMK_HOLD_TAP_HRM(ht_lhrm_mo_mm_ ## mm_on_tap, &mo, &mm_on_tap, KEYS_R THUMBS)
#define LHRM_MO_MM(layer_on_hold, mm_on_tap) \
    ht_lhrm_mo_mm_ ## mm_on_tap layer_on_hold 0

#define ZMK_HOLD_TAP_RHRM_MO_MM(mm_on_tap) \
    ZMK_HOLD_TAP_HRM(ht_rhrm_mo_mm_ ## mm_on_tap, &mo, &mm_on_tap, KEYS_L THUMBS)
#define RHRM_MO_MM(layer_on_hold, mm_on_tap) \
    ht_rhrm_mo_mm_ ## mm_on_tap layer_on_hold 0

////////////////

#define ZMK_HOLD_TAP_LHRM_MACRO_KP(macro_on_hold) \
    ZMK_HOLD_TAP_HRM(ht_lhrm_macro_kp_ ## macro_on_hold, &macro_on_hold, &kp, KEYS_R THUMBS)
#define LHRM_MACRO_KP(macro_on_hold, key_on_tap) \
    ht_lhrm_macro_kp_ ## macro_on_hold 0 key_on_tap

////////////////////////////////

#define KEY_HRM_M4    LALT
#define KEY_HRM_M3    0
#define KEY_HRM_M2    LSHFT
#define KEY_HRM_M1    LEFT_CONTROL
#define KEY_HRM_M0    0

#define LAYER_HRM_M4    -1
#define LAYER_HRM_M3    SYM
#define LAYER_HRM_M2    -1
#define LAYER_HRM_M1    -1
#define LAYER_HRM_M0    -1

////////////////

#define LHRM_M4(key_on_tap) LHRM_KP_KP(KEY_HRM_M4, key_on_tap)
#define LHRM_M3(key_on_tap) LHRM_MO_KP(LAYER_HRM_M3, key_on_tap)
#define LHRM_M2(key_on_tap) LHRM_KP_KP(KEY_HRM_M2, key_on_tap)
#define LHRM_M1(key_on_tap) LHRM_KP_KP(KEY_HRM_M1, key_on_tap)
#define LHRM_M0(key_on_tap) kp key_on_tap

#define RHRM_M0(key_on_tap) kp key_on_tap
#define RHRM_M1(key_on_tap) RHRM_KP_KP(KEY_HRM_M1, key_on_tap)
#define RHRM_M2(key_on_tap) RHRM_KP_KP(KEY_HRM_M2, key_on_tap)
#define RHRM_M3(key_on_tap) RHRM_MO_KP(LAYER_HRM_M3, key_on_tap)
#define RHRM_M4(key_on_tap) RHRM_KP_KP(KEY_HRM_M4, key_on_tap)

////////////////

#define LHRM_M4_TAP() kp KEY_HRM_M4
#define LHRM_M3_TAP() mo LAYER_HRM_M3
#define LHRM_M2_TAP() kp KEY_HRM_M2
#define LHRM_M1_TAP() kp KEY_HRM_M1
#define LHRM_M0_TAP() none

#define RHRM_M0_TAP() none
#define RHRM_M1_TAP() kp KEY_HRM_M1
#define RHRM_M2_TAP() kp KEY_HRM_M2
#define RHRM_M3_TAP() mo LAYER_HRM_M3
#define RHRM_M4_TAP() kp KEY_HRM_M4

////////////////////////////////////////////////////////////////
/*    KEY POSITIONS
  ╭─────────────────────╮ ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────╯
          ╰─────────────╯ ╰─────────────╯
*/

#define __COMBOS

////////////////

#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50

////////////////

// ZMK_COMBO(combo_lt_32, &none, LT3 LT2, BASE NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

////////////////////////////////////////////////////////////////

#define __VARIOUS

////////////////////////////////////////////////////////////////

#define __KEYMAPS

//
// ╭─────┬─────┬─────┬─────┬─────╮           ╭─────┬─────┬─────┬─────┬─────╮
// │ LC5 │ LC4 │ LC3 │ LC2 │ LC1 │           │ LC5 │ LC3 │ LC5 │ LC5 │ LC5 │
// ├─────┼─────┼─────┼─────┼─────┼─────┬─────┼─────┼─────┼─────┼─────┼─────┤
// │ LN5 │ LN4 │ LN3 │ LN2 │ LN1 │ LN0 │ RN0 │ RN1 │ RN2 │ RN3 │ RN4 │ RN5 │
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LT5 │ LT4 │ LT3 │ LT2 │ LT1 │ LT0 │ RT0 │ RT1 │ RT2 │ RT3 │ RT4 │ RT5 │
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LM5 │ LM4 │ LM3 │ LM2 │ LM1 │ LM0 │ RM0 │ RM1 │ RM2 │ RM3 │ RM4 │ RM5 │
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LB5 │ LB4 │ LB3 │ LB2 │ LB1 │ LB0 │ RB0 │ RB1 │ RB2 │ RB3 │ RB4 │ RB5 │
// ├─────┼─────┼─────┼─────┼─────┼─────┴─────┼─────┼─────┼─────┼─────┼─────┤
// │ LF5 │ LF4 │ LF3 │ LF2 │ LF1 │           │ RF1 │ RF2 │ RF3 │ RF4 │ RF5 │
// ├─────┼─────┼─────┼─────┴─────╯           ╰─────┴─────┼─────┼─────┼─────┤
// │ LH5 │ LH4 │ LH3 │                                   │ RH3 │ RH4 │ RH5 │
// ├─────┼─────┼─────┤                                   ├─────┼─────┼─────┤
// │ LH2 │ LH1 │ LH0 │                                   │ RH0 │ RH1 │ RH2 │
// ╰─────┴─────┴─────╯                                   ╰─────┴─────┴─────╯
//
//       ╭─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────╮
//       │ LT4 │ LT3 │ LT2 │ LT1 │ LT0 │ RT0 │ RT1 │ RT2 │ RT3 │ RT4 │
//       ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
//       │ LM4 │ LM3 │ LM2 │ LM1 │ LM0 │ RM0 │ RM1 │ RM2 │ RM3 │ RM4 │
//       ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
//       │ LB4 │ LB3 │ LB2 │ LB1 │ LB0 │ RB0 │ RB1 │ RB2 │ RB3 │ RB4 │
//       ├─────┼─────┼─────┴─────┴─────┴─────┴─────┴─────┼─────┼─────┤
//       │ LH1 │ LH0 │                                   │ RH0 │ RH1 │
//       ╰─────┴─────╯                                   ╰─────┴─────╯


////////////////////////////////////////////////////////////////

#define ____KEYMAP_BASE

////////////////////////////////

ZMK_MOD_MORPH(mm_capsword_capslock,
    bindings = <&caps_word>, <&kp CAPSLOCK>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)

&caps_word {  // mods deactivate caps-word, requires PR #1451
    /delete-property/ ignore-modifiers;
};

////////////////////////////////

ZMK_MOD_MORPH(mm_numword_numlock,
    bindings = <&num_word NUM>, <&tog NUM>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)

&num_word {
    continue-list = <
        BSPC DEL
        DOT COMMA
        PLUS MINUS
        ASTERISK SLASH
        LEFT_PARENTHESIS RIGHT_PARENTHESIS
    >;
};

////////////////////////////////

ZMK_MACRO(macro_cancel,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp K_CANCEL>, <&to BASE>;
)

ZMK_HOLD_TAP(ht__macro_cancel__kp,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&macro_cancel>, <&kp>;
)

////////////////////////////////

ZMK_MACRO_TWO_PARAM(macro_mo_kp,
    wait-ms = <0>;
    tap-ms = <0>;
    bindings
        = <&macro_param_1to1>
        , <&macro_press &mo MACRO_PLACEHOLDER>
        , <&macro_param_2to1>
        , <&macro_press &kp MACRO_PLACEHOLDER>
        , <&macro_pause_for_release>
        , <&macro_param_2to1>
        , <&macro_release &kp MACRO_PLACEHOLDER>
        , <&macro_param_1to1>
        , <&macro_release &mo MACRO_PLACEHOLDER>
        ;
)

ZMK_MACRO(macro__mo_sym__kp_lshift,
    wait-ms = <0>;
    tap-ms = <0>;
    bindings
        = <&macro_press &mo SYM>
        , <&macro_press &kp LSHIFT>
        , <&macro_pause_for_release>
        , <&macro_release &kp LSHIFT>
        , <&macro_release &mo SYM>
        ;
)

ZMK_HOLD_TAP_LHRM_MACRO_KP(macro__mo_sym__kp_lshift)

////////////////////////////////

ZMK_HOLD_TAP_LHRM_KP_MM(mm_mul_div)
ZMK_HOLD_TAP_LHRM_KP_MM(mm_add_sub)
ZMK_HOLD_TAP_LHRM_KP_MM(mm_equal_equal)
ZMK_HOLD_TAP_LHRM_KP_MM(mm_grave_caret)
ZMK_HOLD_TAP_LHRM_KP_MM(mm_dot_colon)

ZMK_HOLD_TAP_RHRM_KP_MM(mm_dot_colon)
ZMK_HOLD_TAP_RHRM_KP_MM(mm_dot_doublequotes)
ZMK_HOLD_TAP_RHRM_KP_MM(mm_excl_qmark)
ZMK_HOLD_TAP_RHRM_KP_MM(mm_parenthesis)
ZMK_HOLD_TAP_RHRM_KP_MM(mm_brackets)
ZMK_HOLD_TAP_RHRM_KP_MM(mm_braces)
ZMK_HOLD_TAP_RHRM_KP_MM(mm_lt_gt)
ZMK_HOLD_TAP_RHRM_KP_MM(mm_doublequotes_singlequote)

////////////////

ZMK_HOLD_TAP_LHRM_MO_MM(mm_bspc_del)

ZMK_HOLD_TAP_RHRM_MO_MM(mm_underscore_minus)
ZMK_HOLD_TAP_RHRM_MO_MM(mm_slash_backslash)

////////////////////////////////

GLV80_LAYER(base,
// ╭─────┬─────┬─────┬─────┬─────╮           ╭─────┬─────┬─────┬─────┬─────╮
// │ LC5 │ LC4 │ LC3 │ LC2 │ LC1 │           │ LC5 │ LC3 │ LC5 │ LC5 │ LC5 │
    &kp F1
    &kp F2
    &kp F3
    &kp F4
    &kp F5

    &kp F6
    &kp F7
    &kp F8
    &kp F9
    &kp F10
// ├─────┼─────┼─────┼─────┼─────┼─────┬─────┼─────┼─────┼─────┼─────┼─────┤
// │ LN5 │ LN4 │ LN3 │ LN2 │ LN1 │ LN0 │ RN0 │ RN1 │ RN2 │ RN3 │ RN4 │ RN5 │
    &kp EQUAL

    &kp N1
    &kp N2
    &kp N3
    &kp N4
    &kp N5

    &kp N6
    &kp N7
    &kp N8
    &kp N9
    &kp N0

    &kp MINUS /* aka, DASH + LOW DASH */
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LT5 │ LT4 │ LT3 │ LT2 │ LT1 │ LT0 │ RT0 │ RT1 │ RT2 │ RT3 │ RT4 │ RT5 │
    &mm_capsword_capslock

    &kp Q
    &LHRM_KP_KP(LEFT_META, W)
    &LHRM_MO_KP(NUM, E)
    &kp R
    &kp F /* T */

    &kp Y
    &kp U
    &kp I
    &RHRM_KP_KP(LEFT_META, O)
    &kp P

    &mm_numword_numlock
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LM5 │ LM4 │ LM3 │ LM2 │ LM1 │ LM0 │ RM0 │ RM1 │ RM2 │ RM3 │ RM4 │ RM5 │
    &ht__macro_cancel__kp 0 ESC

    &LHRM_M4(A)
    &LHRM_M3(S)
    &LHRM_M2(D)
    &LHRM_M1(T) /* F */
    &LHRM_M0(G) /* G */

    &RHRM_M0(K) /* H */
    &RHRM_M1(N) /* J */
    &RHRM_M2(H) /* K */
    &RHRM_M3(L)
    &RHRM_M4(SINGLE_QUOTE)

    &kp RET
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LB5 │ LB4 │ LB3 │ LB2 │ LB1 │ LB0 │ RB0 │ RB1 │ RB2 │ RB3 │ RB4 │ RB5 │
    &mm_undo_undo

    &LHRM_KP_KP(RIGHT_ALT, Z)
    &LHRM_KP_KP(LEFT_META, X)
    &LHRM_MO_KP(NUM, C) /* &LHRM_MACRO_KP(macro__mo_sym__kp_lshift, C) */
    &kp V /* V */
    &kp B
    ,
    &kp J /* N */
    &kp M
    &mm_comma_semicolon /* mm_comma_semicolon | mm_comma_singlequote */
    &RHRM_KP_MM(LEFT_META, mm_dot_colon) /* mm_dot_colon | mm_dot_doublequotes */
    &RHRM_KP_MM(RIGHT_ALT, mm_excl_qmark) /* mm_excl_qmark | SEMICOLON/COLON */

    &kp KEY_REDO
// ├─────┼─────┼─────┼─────┼─────┼─────┴─────┼─────┼─────┼─────┼─────┼─────┤
// │ LF5 │ LF4 │ LF3 │ LF2 │ LF1 │           │ RF1 │ RF2 │ RF3 │ RF4 │ RF5 │
    &kp HOME
    &kp END
    &kp KEY_CUT
    &kp KEY_COPY
    &kp KEY_PASTE
    ,
    &kp PRINTSCREEN
    XXX
    XXX
    &kp PAGE_UP
    &kp PAGE_DOWN
    ,
// ├─────┼─────┼─────┼─────┴─────╯           ╰─────┴─────┼─────┼─────┼─────┤
// │ LH5 │ LH4 │ LH3 │                                   │ RH3 │ RH4 │ RH5 │
    &LHRM_MO_MM(NAV, mm_bspc_del)
    &RHRM_KP_KP(LEFT_CONTROL, TAB)
    &mo SYS

    &mo SYS
    &RHRM_MO_MM(FUNFUN, mm_underscore_minus)
    &RHRM_MO_KP(FUN, SPACE)
    ,
// ├─────┼─────┼─────┤                                   ├─────┼─────┼─────┤
// │ LH2 │ LH1 │ LH0 │                                   │ RH0 │ RH1 │ RH2 │
    &mo FUN
    &kp LEFT_SHIFT
    &mo MAGIC

    &mo FACTORY
    &kp RIGHT_SHIFT
    &RHRM_MO_MM(NAVNUM, mm_slash_backslash)
// ╰─────┴─────┴─────╯                                   ╰─────┴─────┴─────╯
)

////////////////////////////////////////////////////////////////

#define ____KEYMAP_SYM

////////////////////////////////

GLV80_LAYER(sym,
// ╭─────┬─────┬─────┬─────┬─────╮           ╭─────┬─────┬─────┬─────┬─────╮
// │ LC5 │ LC4 │ LC3 │ LC2 │ LC1 │           │ LC5 │ LC3 │ LC5 │ LC5 │ LC5 │
     ___   ___   ___   ___   ___               ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┬─────┼─────┼─────┼─────┼─────┼─────┤
// │ LN5 │ LN4 │ LN3 │ LN2 │ LN1 │ LN0 │ RN0 │ RN1 │ RN2 │ RN3 │ RN4 │ RN5 │
     ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LT5 │ LT4 │ LT3 │ LT2 │ LT1 │ LT0 │ RT0 │ RT1 │ RT2 │ RT3 │ RT4 │ RT5 │
    ___

    XXX
    &kp AT_SIGN
    &LHRM_MO_KP(NUM, HASH)
    &kp DOLLAR
    &kp PERCENT

    &mm_pointer_reference
    &kp MINUS /* aka, DASH + LOW DASH */
    &mm_slash_backslash
    &kp PIPE
    &mm_equal_equal

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LM5 │ LM4 │ LM3 │ LM2 │ LM1 │ LM0 │ RM0 │ RM1 │ RM2 │ RM3 │ RM4 │ RM5 │
    ___

    &LHRM_KP_MM(KEY_HRM_M4, mm_grave_caret)
    &LHRM_KP_MM(KEY_HRM_M3, mm_mul_div)
    &LHRM_KP_MM(KEY_HRM_M2, mm_add_sub)
    &LHRM_KP_MM(KEY_HRM_M1, mm_equal_equal)
    &LHRM_KP_MM(KEY_HRM_M0, mm_dot_colon)

    &RHRM_KP_MM(KEY_HRM_M0, mm_doublequotes_singlequote)
    &RHRM_KP_MM(KEY_HRM_M1, mm_parenthesis)
    &RHRM_KP_MM(KEY_HRM_M2, mm_brackets)
    &RHRM_KP_MM(KEY_HRM_M3, mm_braces)
    &RHRM_KP_MM(KEY_HRM_M4, mm_lt_gt)

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LB5 │ LB4 │ LB3 │ LB2 │ LB1 │ LB0 │ RB0 │ RB1 │ RB2 │ RB3 │ RB4 │ RB5 │
    ___

    &mm_excl_qmark
    &mm_lt_gt
    &mm_and_or
    &kp TILDE
    &mm_comma_semicolon
    ,
    &kp SEMICOLON /* SEMICOLON + COLON */
    &kp RIGHT_PARENTHESIS
    &kp RIGHT_BRACKET
    &kp RIGHT_BRACE
    &kp GREATER_THAN

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┴─────┼─────┼─────┼─────┼─────┼─────┤
// │ LF5 │ LF4 │ LF3 │ LF2 │ LF1 │           │ RF1 │ RF2 │ RF3 │ RF4 │ RF5 │
     ___   ___   ___   ___   ___       ,       ___   ___   ___   ___   ___,
// ├─────┼─────┼─────┼─────┴─────╯           ╰─────┴─────┼─────┼─────┼─────┤
// │ LH5 │ LH4 │ LH3 │                                   │ RH3 │ RH4 │ RH5 │
     ___   ___   ___                                       ___   ___   ___,
// ├─────┼─────┼─────┤                                   ├─────┼─────┼─────┤
// │ LH2 │ LH1 │ LH0 │                                   │ RH0 │ RH1 │ RH2 │
     ___   ___   ___                                       ___   ___   ___
// ╰─────┴─────┴─────╯                                   ╰─────┴─────┴─────╯
)

////////////////////////////////////////////////////////////////

#define ____KEYMAP_NAV

GLV80_LAYER(nav,
// ╭─────┬─────┬─────┬─────┬─────╮           ╭─────┬─────┬─────┬─────┬─────╮
// │ LC5 │ LC4 │ LC3 │ LC2 │ LC1 │           │ LC5 │ LC3 │ LC5 │ LC5 │ LC5 │
    ___   ___   ___   ___   ___               ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┬─────┼─────┼─────┼─────┼─────┼─────┤
// │ LN5 │ LN4 │ LN3 │ LN2 │ LN1 │ LN0 │ RN0 │ RN1 │ RN2 │ RN3 │ RN4 │ RN5 │
    ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LT5 │ LT4 │ LT3 │ LT2 │ LT1 │ LT0 │ RT0 │ RT1 │ RT2 │ RT3 │ RT4 │ RT5 │
    ___

    XXX
    XXX
    &LHRM_MO_KP(NUM, 0)
    XXX
    XXX

    &kp KEY_CUT
    &kp DELETE
    &kp UP_ARROW
    &kp BACKSPACE
    &kp TAB

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LM5 │ LM4 │ LM3 │ LM2 │ LM1 │ LM0 │ RM0 │ RM1 │ RM2 │ RM3 │ RM4 │ RM5 │
    ___

    &LHRM_M4_TAP()
    &LHRM_M3_TAP()
    &LHRM_M2_TAP()
    &LHRM_M1_TAP()
    &LHRM_M0_TAP()

    &kp KEY_COPY
    &kp LEFT_ARROW
    &kp DOWN_ARROW
    &kp RIGHT_ARROW
    &kp KEY_PASTE

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LB5 │ LB4 │ LB3 │ LB2 │ LB1 │ LB0 │ RB0 │ RB1 │ RB2 │ RB3 │ RB4 │ RB5 │
    ___

    XXX
    XXX
    XXX
    XXX
    XXX
    ,
    &kp PAGE_UP
    &kp HOME
    &kp K_CONTEXT_MENU
    &kp END
    &kp PAGE_DOWN

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┴─────┼─────┼─────┼─────┼─────┼─────┤
// │ LF5 │ LF4 │ LF3 │ LF2 │ LF1 │           │ RF1 │ RF2 │ RF3 │ RF4 │ RF5 │
     ___   ___   ___   ___   ___       ,       ___   ___   ___   ___   ___,
// ├─────┼─────┼─────┼─────┴─────╯           ╰─────┴─────┼─────┼─────┼─────┤
// │ LH5 │ LH4 │ LH3 │                                   │ RH3 │ RH4 │ RH5 │
     ___   ___   ___                                       ___   ___   ___,
// ├─────┼─────┼─────┤                                   ├─────┼─────┼─────┤
// │ LH2 │ LH1 │ LH0 │                                   │ RH0 │ RH1 │ RH2 │
     ___   ___   ___                                       ___   ___   ___
)

////////////////////////////////////////////////////////////////

#define ____KEYMAP_FUN

GLV80_LAYER(fun,
// ╭─────┬─────┬─────┬─────┬─────╮           ╭─────┬─────┬─────┬─────┬─────╮
// │ LC5 │ LC4 │ LC3 │ LC2 │ LC1 │           │ LC5 │ LC3 │ LC5 │ LC5 │ LC5 │
     ___   ___   ___   ___   ___               ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┬─────┼─────┼─────┼─────┼─────┼─────┤
// │ LN5 │ LN4 │ LN3 │ LN2 │ LN1 │ LN0 │ RN0 │ RN1 │ RN2 │ RN3 │ RN4 │ RN5 │
     ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LT5 │ LT4 │ LT3 │ LT2 │ LT1 │ LT0 │ RT0 │ RT1 │ RT2 │ RT3 │ RT4 │ RT5 │
    ___

    &kp F1
    &kp F4
    &kp F7
    &kp F10
    &kp F13

    &kp INSERT
    &kp PAUSE_BREAK
    &kp C_NEXT
    &kp C_VOLUME_UP
    &kp C_BRIGHTNESS_INC

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LM5 │ LM4 │ LM3 │ LM2 │ LM1 │ LM0 │ RM0 │ RM1 │ RM2 │ RM3 │ RM4 │ RM5 │
    ___

    &LHRM_M4(F2)
    &LHRM_M3(F5)
    &LHRM_M2(F8)
    &LHRM_M1(F11)
    &LHRM_M0(F14)

    &RHRM_M0(KP_NUMLOCK)
    &RHRM_M1(PRINTSCREEN)
    &RHRM_M2(C_PLAY_PAUSE)
    &RHRM_M3(C_MUTE)
    &RHRM_M4_TAP()

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LB5 │ LB4 │ LB3 │ LB2 │ LB1 │ LB0 │ RB0 │ RB1 │ RB2 │ RB3 │ RB4 │ RB5 │
    ___

    &kp F3
    &kp F6
    &kp F9
    &kp F12
    &kp F15
    ,
    &kp SCROLLLOCK
    XXX
    &kp C_PREVIOUS
    &kp C_VOLUME_DOWN
    &kp C_BRIGHTNESS_DEC

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┴─────┼─────┼─────┼─────┼─────┼─────┤
// │ LF5 │ LF4 │ LF3 │ LF2 │ LF1 │           │ RF1 │ RF2 │ RF3 │ RF4 │ RF5 │
     ___   ___   ___   ___   ___       ,       ___   ___   ___   ___   ___,
// ├─────┼─────┼─────┼─────┴─────╯           ╰─────┴─────┼─────┼─────┼─────┤
// │ LH5 │ LH4 │ LH3 │                                   │ RH3 │ RH4 │ RH5 │
     ___   ___   ___                                       ___   ___   ___,
// ├─────┼─────┼─────┤                                   ├─────┼─────┼─────┤
// │ LH2 │ LH1 │ LH0 │                                   │ RH0 │ RH1 │ RH2 │
     ___   ___   ___                                       ___   ___   ___
// ╰─────┴─────┴─────╯                                   ╰─────┴─────┴─────╯
)

////////////////////////////////////////////////////////////////

#define ____KEYMAP_FUNFUN

GLV80_LAYER(funfun,
// ╭─────┬─────┬─────┬─────┬─────╮           ╭─────┬─────┬─────┬─────┬─────╮
// │ LC5 │ LC4 │ LC3 │ LC2 │ LC1 │           │ LC5 │ LC3 │ LC5 │ LC5 │ LC5 │
     ___   ___   ___   ___   ___               ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┬─────┼─────┼─────┼─────┼─────┼─────┤
// │ LN5 │ LN4 │ LN3 │ LN2 │ LN1 │ LN0 │ RN0 │ RN1 │ RN2 │ RN3 │ RN4 │ RN5 │
     ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LT5 │ LT4 │ LT3 │ LT2 │ LT1 │ LT0 │ RT0 │ RT1 │ RT2 │ RT3 │ RT4 │ RT5 │
    ___

    &kp F15
    &kp F16
    &kp F17
    &kp F18
    &kp F19

    &kp F20
    &kp F21
    &kp F22
    &kp F23
    &kp F24

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LM5 │ LM4 │ LM3 │ LM2 │ LM1 │ LM0 │ RM0 │ RM1 │ RM2 │ RM3 │ RM4 │ RM5 │
    ___

    &kp F15
    &kp F16
    &kp F17
    &kp F18
    &kp F19

    &kp F20
    &kp F21
    &kp F22
    &kp F23
    &kp F24

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LB5 │ LB4 │ LB3 │ LB2 │ LB1 │ LB0 │ RB0 │ RB1 │ RB2 │ RB3 │ RB4 │ RB5 │
    ___

    &kp F15
    &kp F16
    &kp F17
    &kp F18
    &kp F19
    ,
    &kp F20
    &kp F21
    &kp F22
    &kp F23
    &kp F24

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┴─────┼─────┼─────┼─────┼─────┼─────┤
// │ LF5 │ LF4 │ LF3 │ LF2 │ LF1 │           │ RF1 │ RF2 │ RF3 │ RF4 │ RF5 │
     ___   ___   ___   ___   ___       ,       ___   ___   ___   ___   ___,
// ├─────┼─────┼─────┼─────┴─────╯           ╰─────┴─────┼─────┼─────┼─────┤
// │ LH5 │ LH4 │ LH3 │                                   │ RH3 │ RH4 │ RH5 │
     ___   ___   ___                                       ___   ___   ___,
// ├─────┼─────┼─────┤                                   ├─────┼─────┼─────┤
// │ LH2 │ LH1 │ LH0 │                                   │ RH0 │ RH1 │ RH2 │
     ___   ___   ___                                       ___   ___   ___
// ╰─────┴─────┴─────╯                                   ╰─────┴─────┴─────╯
)

////////////////////////////////////////////////////////////////

#define ____KEYMAP_NUM

GLV80_LAYER(num,
// ╭─────┬─────┬─────┬─────┬─────╮           ╭─────┬─────┬─────┬─────┬─────╮
// │ LC5 │ LC4 │ LC3 │ LC2 │ LC1 │           │ LC5 │ LC3 │ LC5 │ LC5 │ LC5 │
     ___   ___   ___   ___   ___               ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┬─────┼─────┼─────┼─────┼─────┼─────┤
// │ LN5 │ LN4 │ LN3 │ LN2 │ LN1 │ LN0 │ RN0 │ RN1 │ RN2 │ RN3 │ RN4 │ RN5 │
     ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LT5 │ LT4 │ LT3 │ LT2 │ LT1 │ LT0 │ RT0 │ RT1 │ RT2 │ RT3 │ RT4 │ RT5 │
    ___

    XXX
    XXX
    XXX
    XXX
    XXX

    &mm_comma_semicolon
    &kp N7
    &kp N8
    &kp N9
    &kp MINUS

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LM5 │ LM4 │ LM3 │ LM2 │ LM1 │ LM0 │ RM0 │ RM1 │ RM2 │ RM3 │ RM4 │ RM5 │
    ___

    &LHRM_M4_TAP()
    &LHRM_M3_TAP()
    &LHRM_M2_TAP()
    &LHRM_M1_TAP()
    &LHRM_M0_TAP()

    &RHRM_KP_MM(KEY_HRM_M0, mm_dot_colon)
    &RHRM_M1(N4)
    &RHRM_M2(N5)
    &RHRM_M3(N6)
    &RHRM_M4(N0)

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LB5 │ LB4 │ LB3 │ LB2 │ LB1 │ LB0 │ RB0 │ RB1 │ RB2 │ RB3 │ RB4 │ RB5 │
    ___

    XXX
    XXX
    XXX
    XXX
    XXX
    ,
    &mm_comma_semicolon
    &kp N1
    &kp N2
    &kp N3
    &kp MINUS

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┴─────┼─────┼─────┼─────┼─────┼─────┤
// │ LF5 │ LF4 │ LF3 │ LF2 │ LF1 │           │ RF1 │ RF2 │ RF3 │ RF4 │ RF5 │
     ___   ___   ___   ___   ___       ,       ___   ___   ___   ___   ___,
// ├─────┼─────┼─────┼─────┴─────╯           ╰─────┴─────┼─────┼─────┼─────┤
// │ LH5 │ LH4 │ LH3 │                                   │ RH3 │ RH4 │ RH5 │
     ___   ___   ___                                       ___   ___   ___,
// ├─────┼─────┼─────┤                                   ├─────┼─────┼─────┤
// │ LH2 │ LH1 │ LH0 │                                   │ RH0 │ RH1 │ RH2 │
     ___   ___   ___                                       ___   ___   ___
// ╰─────┴─────┴─────╯                                   ╰─────┴─────┴─────╯
)

////////////////////////////////////////////////////////////////

#define ____KEYMAP_NAVNUM

GLV80_LAYER(navnum,
// ╭─────┬─────┬─────┬─────┬─────╮           ╭─────┬─────┬─────┬─────┬─────╮
// │ LC5 │ LC4 │ LC3 │ LC2 │ LC1 │           │ LC5 │ LC3 │ LC5 │ LC5 │ LC5 │
     ___   ___   ___   ___   ___               ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┬─────┼─────┼─────┼─────┼─────┼─────┤
// │ LN5 │ LN4 │ LN3 │ LN2 │ LN1 │ LN0 │ RN0 │ RN1 │ RN2 │ RN3 │ RN4 │ RN5 │
     ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LT5 │ LT4 │ LT3 │ LT2 │ LT1 │ LT0 │ RT0 │ RT1 │ RT2 │ RT3 │ RT4 │ RT5 │
    ___

    XXX
    &kp KP_N7
    &kp KP_N8
    &kp KP_N9
    &mm_mul_div_kp

    XXX
    XXX
    XXX
    XXX
    XXX

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LM5 │ LM4 │ LM3 │ LM2 │ LM1 │ LM0 │ RM0 │ RM1 │ RM2 │ RM3 │ RM4 │ RM5 │
    ___

    &kp KP_N0
    &kp KP_N4
    &kp KP_N5
    &kp KP_N6
    &mm_add_sub_kp

    &RHRM_M0_TAP()
    &RHRM_M1_TAP()
    &RHRM_M2_TAP()
    &RHRM_M3_TAP()
    &RHRM_M4_TAP()

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LB5 │ LB4 │ LB3 │ LB2 │ LB1 │ LB0 │ RB0 │ RB1 │ RB2 │ RB3 │ RB4 │ RB5 │
    ___

    &kp KP_DOT
    &kp KP_N1
    &kp KP_N2
    &kp KP_N3
    &kp KP_COMMA
    ,
    XXX
    XXX
    XXX
    XXX
    XXX

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┴─────┼─────┼─────┼─────┼─────┼─────┤
// │ LF5 │ LF4 │ LF3 │ LF2 │ LF1 │           │ RF1 │ RF2 │ RF3 │ RF4 │ RF5 │
     ___   ___   ___   ___   ___       ,       ___   ___   ___   ___   ___,
// ├─────┼─────┼─────┼─────┴─────╯           ╰─────┴─────┼─────┼─────┼─────┤
// │ LH5 │ LH4 │ LH3 │                                   │ RH3 │ RH4 │ RH5 │
     ___   ___   ___                                       ___   ___   ___,
// ├─────┼─────┼─────┤                                   ├─────┼─────┼─────┤
// │ LH2 │ LH1 │ LH0 │                                   │ RH0 │ RH1 │ RH2 │
     ___   ___   ___                                       ___   ___   ___
// ╰─────┴─────┴─────╯                                   ╰─────┴─────┴─────╯
)

////////////////////////////////////////////////////////////////

#define ____KEYMAP_SYS

GLV80_LAYER(sys,
// ╭─────┬─────┬─────┬─────┬─────╮           ╭─────┬─────┬─────┬─────┬─────╮
// │ LC5 │ LC4 │ LC3 │ LC2 │ LC1 │           │ LC5 │ LC3 │ LC5 │ LC5 │ LC5 │
     ___   ___   ___   ___   ___               ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┬─────┼─────┼─────┼─────┼─────┼─────┤
// │ LN5 │ LN4 │ LN3 │ LN2 │ LN1 │ LN0 │ RN0 │ RN1 │ RN2 │ RN3 │ RN4 │ RN5 │
     ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LT5 │ LT4 │ LT3 │ LT2 │ LT1 │ LT0 │ RT0 │ RT1 │ RT2 │ RT3 │ RT4 │ RT5 │
    ___

    XXX
    XXX
    XXX
    XXX
    XXX

    XXX
#if CONFIG_WIRELESS
    &bt BT_PRV
    XXX
    &bt BT_NXT
#else
    XXX
    XXX
    XXX
#endif
    XXX

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LM5 │ LM4 │ LM3 │ LM2 │ LM1 │ LM0 │ RM0 │ RM1 │ RM2 │ RM3 │ RM4 │ RM5 │
    ___

    XXX
#if CONFIG_WIRELESS
    &out OUT_BLE
#else
    XXX
#endif
    &out OUT_TOG
    &out OUT_USB
    XXX

    XXX
#if CONFIG_WIRELESS
    &bt BT_SEL 0
    &bt BT_SEL 1
    &bt BT_SEL 2
    &bt BT_SEL 3
#else
    XXX
    XXX
    XXX
    XXX
#endif

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LB5 │ LB4 │ LB3 │ LB2 │ LB1 │ LB0 │ RB0 │ RB1 │ RB2 │ RB3 │ RB4 │ RB5 │
    ___
    ,
    XXX
    XXX
    XXX
    XXX
    XXX

#if CONFIG_WIRELESS
    &bt BT_CLR
#else
    XXX
#endif
    XXX
    XXX
    XXX
    XXX

    ___
// ├─────┼─────┼─────┼─────┼─────┼─────┴─────┼─────┼─────┼─────┼─────┼─────┤
// │ LF5 │ LF4 │ LF3 │ LF2 │ LF1 │           │ RF1 │ RF2 │ RF3 │ RF4 │ RF5 │
     ___   ___   ___   ___   ___       ,       ___   ___   ___   ___   ___,
// ├─────┼─────┼─────┼─────┴─────╯           ╰─────┴─────┼─────┼─────┼─────┤
// │ LH5 │ LH4 │ LH3 │                                   │ RH3 │ RH4 │ RH5 │
     ___   ___   ___                                       ___   ___   ___,
// ├─────┼─────┼─────┤                                   ├─────┼─────┼─────┤
// │ LH2 │ LH1 │ LH0 │                                   │ RH0 │ RH1 │ RH2 │
     ___   ___   ___                                       ___   ___   ___
// ╰─────┴─────┴─────╯                                   ╰─────┴─────┴─────╯
)

////////////////////////////////////////////////////////////////

#define ____KEYMAP_FACTORY

ZMK_LAYER(factory,
    &kp N0   &kp N6   &kp N2   &kp N8   &kp N4                                                                              &kp N4   &kp N8   &kp N2   &kp N6   &kp N0
    &kp N1   &kp N7   &kp N3   &kp N9   &kp N5   &kp N0                                                            &kp N0   &kp N5   &kp N9   &kp N3   &kp N7   &kp N1
    &kp N2   &kp N8   &kp N4   &kp N0   &kp N6   &kp N1                                                            &kp N1   &kp N6   &kp N0   &kp N4   &kp N8   &kp N2
    &kp N3   &kp N9   &kp N5   &kp N1   &kp N7   &kp N2                                                            &kp N2   &kp N7   &kp N1   &kp N5   &kp N9   &kp N3
    &kp N4   &kp N0   &kp N6   &kp N2   &kp N8   &kp N3   &kp N4   &kp N5   &kp N6      &kp N6   &kp N5   &kp N4   &kp N3   &kp N8   &kp N2   &kp N6   &kp N0   &kp N4
    &kp N5   &kp N1   &kp N7   &kp N3   &kp N9            &kp N7   &kp N8   &kp N9      &kp N9   &kp N8   &kp N7            &kp N9   &kp N3   &kp N7   &kp N1   &kp N5
)

////////////////////////////////////////////////////////////////

#define ____KEYMAP_MAGIC

ZMK_LAYER(magic,
    &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &bt BT_CLR_ALL
    &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
    &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
    &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
    &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
    &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &to FACTORY
)

////////////////////////////////////////////////////////////////

#define ____KEYMAP_TEMPLATE

GLV80_LAYER(_template,
// ╭─────┬─────┬─────┬─────┬─────╮           ╭─────┬─────┬─────┬─────┬─────╮
// │ LC5 │ LC4 │ LC3 │ LC2 │ LC1 │           │ LC5 │ LC3 │ LC5 │ LC5 │ LC5 │
     ___   ___   ___   ___   ___               ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┬─────┼─────┼─────┼─────┼─────┼─────┤
// │ LN5 │ LN4 │ LN3 │ LN2 │ LN1 │ LN0 │ RN0 │ RN1 │ RN2 │ RN3 │ RN4 │ RN5 │
     ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LT5 │ LT4 │ LT3 │ LT2 │ LT1 │ LT0 │ RT0 │ RT1 │ RT2 │ RT3 │ RT4 │ RT5 │
     ___   XXX   XXX   XXX   XXX   XXX   XXX   XXX   XXX   XXX   XXX   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LM5 │ LM4 │ LM3 │ LM2 │ LM1 │ LM0 │ RM0 │ RM1 │ RM2 │ RM3 │ RM4 │ RM5 │
     ___   XXX   XXX   XXX   XXX   XXX   XXX   XXX   XXX   XXX   XXX   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤
// │ LB5 │ LB4 │ LB3 │ LB2 │ LB1 │ LB0 │ RB0 │ RB1 │ RB2 │ RB3 │ RB4 │ RB5 │
     ___   XXX   XXX   XXX   XXX   XXX , XXX   XXX   XXX   XXX   XXX   ___
// ├─────┼─────┼─────┼─────┼─────┼─────┴─────┼─────┼─────┼─────┼─────┼─────┤
// │ LF5 │ LF4 │ LF3 │ LF2 │ LF1 │           │ RF1 │ RF2 │ RF3 │ RF4 │ RF5 │
     ___   ___   ___   ___   ___       ,       ___   ___   ___   ___   ___,
// ├─────┼─────┼─────┼─────┴─────╯           ╰─────┴─────┼─────┼─────┼─────┤
// │ LH5 │ LH4 │ LH3 │                                   │ RH3 │ RH4 │ RH5 │
     ___   ___   ___                                       ___   ___   ___,
// ├─────┼─────┼─────┤                                   ├─────┼─────┼─────┤
// │ LH2 │ LH1 │ LH0 │                                   │ RH0 │ RH1 │ RH2 │
     ___   ___   ___                                       ___   ___   ___
// ╰─────┴─────┴─────╯                                   ╰─────┴─────┴─────╯
)

////////////////////////////////////////////////////////////////
////////////////////////////////
////////////////
////////
////
//
